" https://medium.com/geekculture/neovim-configuration-for-beginners-b2116dbbde84
" https://catonmat.net/vim-plugins-nerdtree-vim
" https://stackoverflow.com/questions/3776117/what-is-the-difference-between-the-remap-noremap-nnoremap-and-vnoremap-mapping
" https://github.com/jdhao/nvim-config 
" read up on plug vs. packer -- faster + more feature rich + lua. 
" configuration through lua
" code navigation (treesitter and/or solargraph), file navigation (nerdtree), 
" global file search (telescope) and autocomplete
" but LeaderF fastest (even more so than fzf?)
" fzf good gui though same with telescope
" LSP -- the thing that provides useful functionality such as code
" nagivation. But it's slower because it has to send over the entire file
" CoC - This is meant to be a runtime for vscode plugins for VIM, but is
" just often used for LSP type features. Might be a good complement but
" increase the size / speed of things? Might as well use CoC because it has
" typescript support and prettier
" Treesitter - provides more local type support. Builds out a syntax
" tree that provides a common interface for different languages. Uses LR and
" GLR parsing which basically is more flexible than regex parsing and can
" also fork the tree based on different interpretations. The
" time complexity is based on the number of edits rather than the size of
" the entire tree. Really nice and speedy and good for syntax highlighting
" among other things [talk by Max
" Brunsfield](https://www.youtube.com/watch?v=Jes3bD6P0To&t=38s)
" docker support with [lazy docker](https://catonmat.net/vim-plugins-nerdtree-vim) Hop https://www.youtube.com/feed/history and https://www.youtube.com/watch?v=U420QymHjlA&t=243s
"

" sourced from ~/.config/nvim/init.vim
" CoC settings in ~/.config/nvim/coc-settings.json

set runtimepath^=~/.vim runtimepath+=~/.vim/after
let &packpath = &runtimepath
let mapleader = '\'
source ~/.dotfiles/vim/vimrc

call plug#begin("~/.dotfiles/vim/plugged")
  Plug 'dracula/vim'
  Plug 'ryanoasis/vim-devicons'

  Plug 'SirVer/ultisnips' " :Snippets
  Plug 'honza/vim-snippets' " :help provider-python

  Plug 'scrooloose/nerdtree'
  Plug 'preservim/nerdcommenter' " m to modify filetree

  Plug 'mhinz/vim-startify'
  Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
  Plug 'neovim/nvim-lspconfig' " config to tell it language specifics
  Plug 'neoclide/coc.nvim', {'branch': 'release'} " Also add [coc-autocomplete](https://github.com/neoclide/coc-snippets)
  Plug 'Yggdroot/LeaderF', { 'do': ':LeaderfInstallCExtension' }
  Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
  Plug 'junegunn/fzf.vim'

  " Misc
  Plug 'folke/which-key.nvim'
  Plug 'jdhao/better-escape.vim' " jj
  Plug 'phaazon/hop.nvim'
  Plug 'skywind3000/asyncrun.vim'
  Plug 'machakann/vim-sandwich' " s<a(dd)|d(elete)|r(replace)><motion>
  Plug 'Raimondi/delimitMate'   " complete () and \"
  Plug 'simnalamburt/vim-mundo'
  Plug 'metakirby5/codi.vim' " inline repl; needs irb like quokka for js
  " Plug 'glacambre/firenvim' " vim in the browser -- read the [security
  " page](https://github.com/glacambre/firenvim/security/policy) before enabling 

  " cmd line 
  Plug 'gelguy/wilder.nvim'

  "Git
  Plug 'tpope/vim-fugitive' " http://vimcasts.org/episodes/fugitive-vim-exploring-the-history-of-a-git-repository/
  Plug 'tpope/vim-rhubarb'

  " RoR specific ones 
  Plug 'thoughtbot/vim-rspec'
  Plug 'tpope/vim-rails'
  Plug 'tpope/vim-endwise'
call plug#end()

" color schemes
if (has("termguicolors"))
 set termguicolors
 endif
 syntax enable

" colorscheme evening
colorscheme dracula " open new split panes to right and below
set splitright
set splitbelow

" https://learnvimscriptthehardway.stevelosh.com/
for fpath in split(glob('~/.dotfiles/vim/nvim-configs/*.vim'), '\n')
  exe 'source' fpath
endfor

